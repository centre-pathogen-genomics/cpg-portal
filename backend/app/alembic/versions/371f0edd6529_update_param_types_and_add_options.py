"""update param types and add options

Revision ID: 371f0edd6529
Revises: 612de0e148ff
Create Date: 2024-05-13 04:04:26.402079

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '371f0edd6529'
down_revision = '612de0e148ff'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('param', sa.Column('options', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    # ### end Alembic commands ###
    
        # Check if the old enum exists before renaming
    op.execute("""
        DO $$
        BEGIN
            IF EXISTS (SELECT 1 FROM pg_type WHERE typname = 'paramtype') THEN
                ALTER TYPE paramtype RENAME TO paramtype_old;
            END IF;
        END
        $$;
    """)
    
    # Creating the new enum type with possibly new values added
    param_type_new = sa.Enum('str', 'int', 'float', 'bool', 'enum', 'file', name='paramtype')
    param_type_new.create(op.get_bind(), checkfirst=False)
    
    # Updating the 'param_type' column in the 'param' table to use the new enum with an explicit cast
    op.execute("ALTER TABLE param ALTER COLUMN param_type TYPE paramtype USING param_type::text::paramtype")
    
    # Dropping the old enum type if it exists
    op.execute("""
        DO $$
        BEGIN
            IF EXISTS (SELECT 1 FROM pg_type WHERE typname = 'paramtype_old') THEN
                DROP TYPE paramtype_old;
            END IF;
        END
        $$;
    """)



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('param', 'options')
    # ### end Alembic commands ###

     # Similar to upgrade, ensure each operation logically follows the last
    op.execute("ALTER TYPE paramtype RENAME TO paramtype_new")
    
    param_type_old = sa.Enum('str', 'int', 'float', 'upload', 'path', name='paramtype')
    param_type_old.create(op.get_bind(), checkfirst=False)
    
    op.execute("ALTER TABLE param ALTER COLUMN param_type TYPE paramtype USING param_type::text::paramtype_old")
    
    op.execute("DROP TYPE paramtype_new")
