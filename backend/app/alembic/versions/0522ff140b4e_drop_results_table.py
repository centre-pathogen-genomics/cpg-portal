"""drop results table

Revision ID: 0522ff140b4e
Revises: 561cddce45ed
Create Date: 2025-01-16 14:36:19.385315

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0522ff140b4e'
down_revision = '561cddce45ed'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the 'filetype' enum type
    op.execute("CREATE TYPE filetype AS ENUM ('text', 'image', 'csv', 'tsv', 'json', 'unknown')")

    # Alter the 'target' column with explicit casting using the 'USING' clause
    op.execute("""
        ALTER TABLE target
        ALTER COLUMN target_type TYPE filetype
        USING target_type::text::filetype
    """)

    op.drop_table('result')
    op.add_column('file', sa.Column('size', sa.Integer(), nullable=True))
    op.add_column('file', sa.Column('file_type', sa.Enum('text', 'image', 'csv', 'tsv', 'json', 'unknown', name='filetype'), nullable=True))
    op.add_column('file', sa.Column('run_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'file', 'run', ['run_id'], ['id'])

   
    op.drop_column('target', 'description')
    op.drop_column('target', 'name')
    op.drop_column('target', 'display')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Change 'target_type' column back to the old enum type using explicit casting
    op.execute("""
        ALTER TABLE target
        ALTER COLUMN target_type TYPE targettype
        USING target_type::text::targettype
    """)

    op.add_column('target', sa.Column('display', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('target', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('target', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))

    op.drop_constraint(None, 'file', type_='foreignkey')
    op.drop_column('file', 'run_id')
    op.drop_column('file', 'file_type')
    op.drop_column('file', 'size')
    op.create_table('result',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('file_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('target_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('run_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], name='result_file_id_fkey'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='result_owner_id_fkey'),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], name='result_run_id_fkey'),
    sa.ForeignKeyConstraint(['target_id'], ['target.id'], name='result_target_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='result_pkey')
    )
    # ### end Alembic commands ###
